syntax = "proto3";

package yandex.cloud.video.v1;

import "google/protobuf/timestamp.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/video/v1;video";
option java_package = "yandex.cloud.api.video.v1";

message Stream {
  reserved 102 to 199;
  reserved 201 to 999;
  reserved 12 to 99;
  reserved 7;

  // ID of the stream.
  string id = 1;
  // ID of the channel where the stream was created.
  string channel_id = 2;
  // ID of the line to which stream is linked.
  string line_id = 3;

  // Stream title.
  string title = 4;
  // Stream description.
  string description = 5;
  // ID of the thumbnail.
  string thumbnail_id = 6;

  // Stream status.
  StreamStatus status = 8;
  // Stream start time.
  google.protobuf.Timestamp start_time = 9;
  // Stream publish time. Time when stream switched to ONAIR status.
  google.protobuf.Timestamp publish_time = 10;
  // Stream finish time.
  google.protobuf.Timestamp finish_time = 11;

  // Stream type.
  oneof stream_type {
    // On demand stream. It starts immediately when a signal appears.
    OnDemand on_demand = 1000;
    // Schedule stream. Determines when to start receiving the signal or finish time.
    Schedule schedule = 1001;
  }

  // Time when stream was created.
  google.protobuf.Timestamp created_at = 100;
  // Time of last stream update.
  google.protobuf.Timestamp updated_at = 101;

  // Custom labels as `` key:value `` pairs. Maximum 64 per resource.
  map<string, string> labels = 200;

  // Stream status.
  enum StreamStatus {
    // Stream status unspecified.
    STREAM_STATUS_UNSPECIFIED = 0;
    // Stream offline.
    OFFLINE = 1;
    // Preparing the infrastructure for receiving video signal.
    PREPARING = 2;
    // Everything is ready to launch stream.
    READY = 3;
    // Stream onair.
    ONAIR = 4;
    // Stream finished.
    FINISHED = 5;
  }
}

// If "OnDemand" is used, client should start and finish explicitly.
message OnDemand {}

// If "Schedule" is used, stream automatically start and finish at this time.
message Schedule {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp finish_time = 2;
}
