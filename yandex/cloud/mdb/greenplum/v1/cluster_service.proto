syntax = "proto3";

package yandex.cloud.mdb.greenplum.v1;

import "google/api/annotations.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

import "yandex/cloud/api/operation.proto";
import "yandex/cloud/operation/operation.proto";
import "yandex/cloud/validation.proto";

import "yandex/cloud/mdb/greenplum/v1/cluster.proto";
import "yandex/cloud/mdb/greenplum/v1/maintenance.proto";
import "yandex/cloud/mdb/greenplum/v1/config.proto";
import "yandex/cloud/mdb/greenplum/v1/host.proto";
import "yandex/cloud/mdb/greenplum/v1/backup.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/greenplum/v1;greenplum";
option java_package = "yandex.cloud.api.mdb.greenplum.v1";

// A set of methods for managing Greenplum® clusters.
service ClusterService {

  // Returns the specified Greenplum® cluster.
  //
  // To get the list of available Greenplum® clusters, make a [List] request.
  rpc Get (GetClusterRequest) returns (Cluster) {
    option (google.api.http) = {get: "/managed-greenplum/v1/clusters/{cluster_id}"};
  }

  // Retrieves a list of Greenplum® clusters that belong to the specified folder.
  rpc List (ListClustersRequest) returns (ListClustersResponse) {
    option (google.api.http) = {get: "/managed-greenplum/v1/clusters"};
  }

  // Creates a Greenplum® cluster in the specified folder.
  rpc Create (CreateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-greenplum/v1/clusters" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "CreateClusterMetadata"
      response: "Cluster"
    };
  }

  // Updates the specified Greenplum® cluster.
  rpc Update (UpdateClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {patch: "/managed-greenplum/v1/clusters/{cluster_id}" body: "*"};
    option (yandex.cloud.api.operation) = {
      metadata: "UpdateClusterMetadata"
      response: "Cluster"
    };
  }

  // Deletes the specified Greenplum® cluster.
  rpc Delete (DeleteClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {delete: "/managed-greenplum/v1/clusters/{cluster_id}"};
    option (yandex.cloud.api.operation) = {
      metadata: "DeleteClusterMetadata"
      response: "google.protobuf.Empty"
    };
  }

  // Starts the specified Greenplum® cluster.
  rpc Start (StartClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-greenplum/v1/clusters/{cluster_id}:start"};
    option (yandex.cloud.api.operation) = {
      metadata: "StartClusterMetadata"
      response: "Cluster"
    };
  }

  // Stops the specified Greenplum® cluster.
  rpc Stop (StopClusterRequest) returns (operation.Operation) {
    option (google.api.http) = {post: "/managed-greenplum/v1/clusters/{cluster_id}:stop"};
    option (yandex.cloud.api.operation) = {
      metadata: "StopClusterMetadata"
      response: "Cluster"
    };
  }

  // Retrieves the list of Operation resources for the specified cluster.
  rpc ListOperations (ListClusterOperationsRequest) returns (ListClusterOperationsResponse) {
    option (google.api.http) = {get: "/managed-greenplum/v1/clusters/{cluster_id}/operations"};
  }

  // Retrieves a list of master hosts for the specified cluster.
  rpc ListMasterHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = {get: "/managed-greenplum/v1/clusters/{cluster_id}/master-hosts"};
  }

  // Retrieves a list of segment hosts for the specified cluster.
  rpc ListSegmentHosts (ListClusterHostsRequest) returns (ListClusterHostsResponse) {
    option (google.api.http) = {get: "/managed-greenplum/v1/clusters/{cluster_id}/segment-hosts"};
  }

  // Retrieves logs for the specified Greenplum® cluster.
  rpc ListLogs (ListClusterLogsRequest) returns (ListClusterLogsResponse) {
    option (google.api.http) = { get: "/managed-greenplum/v1/clusters/{cluster_id}:logs" };
  }

  // Retrieves the list of available backups for the specified Greenplum cluster.
  rpc ListBackups (ListClusterBackupsRequest) returns (ListClusterBackupsResponse) {
      option (google.api.http) = {get: "/managed-greenplum/v1/clusters/{cluster_id}/backups"};
  }

  // Creates a new Greenplum® cluster using the specified backup.
  rpc Restore (RestoreClusterRequest) returns (operation.Operation) {
      option (google.api.http) = { post: "/managed-greenplum/v1/clusters:restore" body: "*" };
      option (yandex.cloud.api.operation) = {
          metadata: "RestoreClusterMetadata"
          response: "Cluster"
      };
  }
}

message GetClusterRequest {
  // ID of the Greenplum® Cluster resource to return.
  // To get the cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message ListClustersRequest {
  // ID of the folder to list Greenplum® clusters in.
  // To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 1-63 characters long and match the regular expression `[a-zA-Z0-9_-]+`.
  string filter = 4 [(length) = "<=1000"];
}

message ListClustersResponse {
  // List of Greenplum Cluster resources.
  repeated Cluster clusters = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
  // for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
  // list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message CreateClusterRequest {
  // ID of the folder to create the Greenplum® cluster in.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // Name of the Greenplum® cluster. The name must be unique within the folder. Maximum 63 characters.
  string name = 2 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

  // Description of the Greenplum® cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 per resource.
  // For example, "project":"mvp" or "source":"dictionary".
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // Deployment environment of the Greenplum® cluster.
  Cluster.Environment environment = 5 [(required) = true];

  // Greenplum® cluster configuration.
  GreenplumConfig config = 6;

  // Configuration of the Greenplum® master subcluster.
  MasterSubclusterConfigSpec master_config = 7;

  // Configuration of the Greenplum® segment subcluster.
  SegmentSubclusterConfigSpec segment_config = 8;

  // Number of hosts in the master subcluster.
  int64 master_host_count = 9;

  // Number of segments per host.
  int64 segment_in_host = 10;

  // Number of hosts in the segment subcluster.
  int64 segment_host_count = 11;

  // Owner user name.
  string user_name = 12;

  // Owner user password. Must be 8-128 characters long
  string user_password = 13 [(required) = true, (length) = "8-128"];

  // ID of the network to create the cluster in.
  string network_id = 14 [(required) = true, (length) = "<=50"];

  // User security groups.
  repeated string security_group_ids = 15;

  // Whether or not cluster is protected from being deleted.
  bool deletion_protection = 16;

  // Host groups to place VMs of the cluster in.
  repeated string host_group_ids = 17;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 19;

  ConfigSpec config_spec = 20;
}

// Configuration of greenplum and odyssey
message ConfigSpec {
  oneof greenplum_config {
    GreenplumConfig6_17 greenplum_config_6_17 = 1 [json_name="greenplumConfig_6_17"];
    GreenplumConfig6_19 greenplum_config_6_19 = 2 [json_name="greenplumConfig_6_19"];
  }

  // Odyssey pool settings
  ConnectionPoolerConfig pool = 4;
}

message CreateClusterMetadata {
  // ID of the Greenplum® cluster that is being created.
  string cluster_id = 1;
}

message UpdateClusterRequest {
  // ID of the Greenplum® Cluster resource to update.
  // To get the Greenplum® cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Field mask that specifies which fields of the Greenplum® Cluster resource should be updated.
  google.protobuf.FieldMask update_mask = 2;

  // New description of the Greenplum® cluster.
  string description = 3 [(length) = "<=256"];

  // Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 per resource.
  // For example, "project":"mvp" or "source":"dictionary".
  //
  // The new set of labels will completely replace the old ones. To add a label, request the current
  // set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
  map<string, string> labels = 4 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

  // New name for the cluster.
  string name = 5 [(length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

  // Greenplum® cluster configuration.
  GreenplumConfig config = 6;

  // Configuration of the Greenplum® master subcluster.
  MasterSubclusterConfigSpec master_config = 7;

  // Configuration of the Greenplum® segment subcluster.
  SegmentSubclusterConfigSpec segment_config = 8;

  // Window of maintenance operations.
  MaintenanceWindow maintenance_window = 15;

  // User security groups.
  repeated string security_group_ids = 17;

  // Whether or not cluster is protected from being deleted.
  bool deletion_protection = 18;
}

message UpdateClusterMetadata {
  // ID of the Greenplum® Cluster resource that is being updated.
  string cluster_id = 1;
}

message DeleteClusterRequest {
  // ID of the Greenplum® cluster to delete.
  // To get the Greenplum® cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message DeleteClusterMetadata {
  // ID of the Greenplum® cluster that is being deleted.
  string cluster_id = 1;
}

message StartClusterRequest {
  // ID of the Greenplum® cluster to start.
  // To get the Greenplum® cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StartClusterMetadata {
  // ID of the Greenplum® cluster being started.
  string cluster_id = 1;
}

message StopClusterRequest {
  // ID of the Greenplum® cluster to stop.
  // To get the Greenplum® cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];
}

message StopClusterMetadata {
  // ID of the Greenplum® cluster being stopped.
  string cluster_id = 1;
}

message ListClusterOperationsRequest {
  // ID of the Greenplum® Cluster resource to list operations for.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterOperationsResponse {
  // List of Operation resources for the specified Greenplum® cluster.
  repeated operation.Operation operations = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}

message ListClusterHostsRequest {
  // ID of the Greenplum® cluster.
  // To get the Greenplum® cluster ID use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];
}

message ListClusterHostsResponse {
  // Requested list of hosts for the cluster.
  repeated Host hosts = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}


// Configuration of the master subcluster.
message MasterSubclusterConfigSpec {
  // Resources allocated to Greenplum® master subcluster hosts.
  Resources resources = 1;
}

// Configuration of the segment subcluster.
message SegmentSubclusterConfigSpec {
  // Resources allocated to Greenplum® segment subcluster hosts.
  Resources resources = 1;
}

message ListClusterLogsResponse {
  // Requested log records.
  repeated LogRecord logs = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
  // for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
  // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
  // This value is interchangeable with the [StreamLogRecord.next_record_token] from StreamLogs method.
  string next_page_token = 2;
}

message LogRecord {
  // Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp timestamp = 1;

  // Contents of the log record.
  map<string, string> message = 2;
}
message ListClusterLogsRequest {
  // ID of the Greenplum® cluster to request logs for.
  // To get the Greenplum® cluster ID, use a [ClusterService.List] request.
  string cluster_id = 1 [(required) = true, (length) = "<=50"];

  // Columns from logs table to request.
  // If no columns are specified, entire log records are returned.
  repeated string column_filter = 2;

  // Type of the service to request logs about.
  ServiceType service_type = 3;

  // Type of the service to request logs about.
  enum ServiceType {

    // Type is not specified.
    SERVICE_TYPE_UNSPECIFIED = 0;

    // Greenplum® activity logs.
    GREENPLUM = 1;

    // Greenplum® pooler logs.
    GREENPLUM_POOLER = 2;
  }

  // Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp from_time = 4;

  // End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
  google.protobuf.Timestamp to_time = 5;

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests.
  int64 page_size = 6 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the [ListClusterLogsResponse.next_page_token]
  // returned by a previous list request.
  string page_token = 7 [(length) = "<=100"];

  // Always return `next_page_token`, even if the current page is empty.
  bool always_next_page_token = 8;

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently filtering can be applied to the [LogRecord.logs.message.hostname],
  // [LogRecord.logs.message.error_severity] (for `GREENPLUM` service) and [LogRecord.logs.message.level] (for `GREENPLUM_POOLER` service) fields.
  // 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
  // 3. The value. Must be 1-63 characters long and match the regular expression `^[a-z0-9.-]{1,61}$`.
  // Examples of a filter:
  // * `message.hostname='node1.db.cloud.yandex.net'`
  // * `message.error_severity IN ("ERROR", "FATAL", "PANIC") AND message.hostname = "node1.db.cloud.yandex.net"`
  string filter = 9 [(length) = "<=1000"];
}

message ListClusterBackupsRequest {
    // ID of the Greenplum® cluster.
    // To get the Greenplum® cluster ID use a [ClusterService.List] request.
    string cluster_id = 1 [(required) = true, (length) = "<=50"];

    // The maximum number of results per page to return. If the number of available
    // results is larger than [page_size], the service returns a [ListClusterBackupsResponse.next_page_token]
    // that can be used to get the next page of results in subsequent list requests.
    int64 page_size = 2 [(value) = "<=1000"];

    // Page token.  To get the next page of results, set [page_token] to the [ListClusterBackupsResponse.next_page_token]
    // returned by a previous list request.
    string page_token = 3 [(length) = "<=100"];
}

message ListClusterBackupsResponse {
    // List of Greenplum® backups.
    repeated Backup backups = 1;

    // This token allows you to get the next page of results for list requests. If the number of results
    // is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value
    // for the [ListClusterBackupsRequest.page_token] query parameter in the next list request.
    // Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    string next_page_token = 2;
}

message RestoreClusterRequest {
    // ID of the backup to create a cluster from.
    // To get the backup ID, use a [ClusterService.ListBackups] request.
    string backup_id = 1 [(required) = true];

    // ID of the folder to create the Greenplum® cluster in.
    string folder_id = 2 [(required) = true, (length) = "<=50"];

    // Name of the Greenplum® cluster. The name must be unique within the folder.
    string name = 3 [(required) = true, (length) = "<=63", (pattern) = "[a-zA-Z0-9_-]*"];

    // Description of the Greenplum® cluster.
    string description = 4 [(length) = "<=256"];

    // Custom labels for the Greenplum® cluster as `key:value` pairs. Maximum 64 per resource.
    // For example, "project": "mvp" or "source": "dictionary".
    map<string, string> labels = 5 [(yandex.cloud.size) = "<=64", (length) = "<=63", (pattern) = "[-_0-9a-z]*", (map_key).length = "<=63", (map_key).pattern = "[a-z][-_0-9a-z]*"];

    // Deployment environment of the Greenplum® cluster.
    Cluster.Environment environment = 6 [(required) = true];

    // Greenplum® cluster config
    GreenplumRestoreConfig config = 7;

    // Resources of the Greenplum® master subcluster.
    Resources master_resources = 8;

    // Resources of the Greenplum® segment subcluster.
    Resources segment_resources = 9;

    // ID of the network to create the cluster in.
    string network_id = 10 [(required) = true, (length) = "<=50"];

    // User security groups
    repeated string security_group_ids = 11;

    // Deletion Protection inhibits deletion of the cluster
    bool deletion_protection = 12;

    // Host groups to place VMs of cluster on.
    repeated string host_group_ids = 13;

    // ID of placement group
    string placement_group_id = 14;

    // Window of maintenance operations.
    MaintenanceWindow maintenance_window = 15;
}

message RestoreClusterMetadata {
    // ID of the new Greenplum® cluster that is being created from a backup.
    string cluster_id = 1;

    // ID of the backup that is being used for creating a cluster.
    string backup_id = 2;
}
