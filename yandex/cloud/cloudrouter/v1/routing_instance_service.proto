syntax = "proto3";

package yandex.cloud.cloudrouter.v1;

import "google/api/annotations.proto";
import "yandex/cloud/validation.proto";

import "yandex/cloud/cloudrouter/v1/routing_instance.proto";

option go_package = "github.com/yandex-cloud/go-genproto/yandex/cloud/cloudrouter/v1;cloudrouter";
option java_package = "yandex.cloud.api.cloudrouter.v1";

// A set of methods for managing RoutingInstance resources.
service RoutingInstanceService {

  // Returns the specified RoutingInstance resource.
  //
  // To get the list of available RoutingInstance resources, make a [List] request.
  rpc Get (GetRoutingInstanceRequest) returns (RoutingInstance) {
    option (google.api.http) = {get: "/vpc/v1/cloudrouter/{routing_instance_id}"};
  }

  // Returns the RoutingInstance resource by vpcNetworkId
  //
  // To get the list of available RoutingInstance resources, make a [List] request.
  rpc GetByVpcNetworkId (GetRoutingInstanceByVpcNetworkIdRequest) returns (RoutingInstance);

  // Returns the RoutingInstance resource by cicPrivateConnectionId
  //
  // To get the list of available RoutingInstance resources, make a [List] request.
  rpc GetByCicPrivateConnectionId (GetRoutingInstanceByCicPrivateConnectionIdRequest) returns (RoutingInstance);

  // Retrieves the list of RoutingInstance resources in the specified folder.
  rpc List (ListRoutingInstancesRequest) returns (ListRoutingInstancesResponse) {
    option (google.api.http) = {get: "/vpc/v1/cloudrouters"};
  }
}

message GetRoutingInstanceRequest {
  // ID of the RoutingInstance resource to return.
  // To get the routingInstance ID use a [RoutingInstanceService.List] request.
  string routing_instance_id = 1 [(required) = true, (length) = "<=50"];
}

message GetRoutingInstanceByCicPrivateConnectionIdRequest {
  // ID of the PrivateConnection resource to return by.
  // To get the routingInstance ID use a [RoutingInstanceService.List] request.
  string cic_private_connection_id = 1 [(required) = true, (length) = "<=50"];
}

message GetRoutingInstanceByVpcNetworkIdRequest {
  // ID of the VpcNetwork resource to return by.
  // To get the routingInstance ID use a [RoutingInstanceService.List] request.
  string vpc_network_id = 1 [(required) = true, (length) = "<=50"];
}

message ListRoutingInstancesRequest {
  // ID of the folder to list routingInstance in.
  // To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
  string folder_id = 1 [(required) = true, (length) = "<=50"];

  // The maximum number of results per page to return. If the number of available
  // results is larger than [page_size],
  // the service returns a [ListRoutingInstancesResponse.next_page_token]
  // that can be used to get the next page of results in subsequent list requests. Default value: 100.
  int64 page_size = 2 [(value) = "<=1000"];

  // Page token. To get the next page of results, set [page_token] to the
  // [ListRoutingInstanceResponse.next_page_token] returned by a previous list request.
  string page_token = 3 [(length) = "<=100"];

  // A filter expression that filters resources listed in the response.
  // The expression must specify:
  // 1. The field name. Currently you can use filtering only on [RoutingInstance.name] field.
  // 2. An `=` operator.
  // 3. The value in double quotes (`"`). Must be 3-63 characters long and match the regular expression `[a-z][-a-z0-9]{1,61}[a-z0-9]`.
  string filter = 4 [(length) = "<=1000"];
}

message ListRoutingInstancesResponse {
  // List of RoutingInstance resources.
  repeated RoutingInstance routing_instances = 1;

  // This token allows you to get the next page of results for list requests. If the number of results
  // is larger than [ListRoutingInstancesResponse.page_size], use
  // the [next_page_token] as the value
  // for the [ListRoutingInstanceResponses.page_token] query parameter
  // in the next list request. Subsequent list requests will have their own
  // [next_page_token] to continue paging through the results.
  string next_page_token = 2;
}
