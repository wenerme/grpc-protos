// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package uber.cadence.api.v1;

option go_package = "github.com/uber/cadence-idl/go/proto/api/v1;apiv1";
option java_multiple_files = true;
option java_outer_classname = "TaskListProto";
option java_package = "com.uber.cadence.api.v1";

import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

message TaskList {
  string name = 1;
  TaskListKind kind = 2;
}

enum TaskListKind {
  TASK_LIST_KIND_INVALID = 0;
  TASK_LIST_KIND_NORMAL = 1;
  TASK_LIST_KIND_STICKY = 2;
}

enum TaskListType {
  TASK_LIST_TYPE_INVALID = 0;
  TASK_LIST_TYPE_DECISION = 1;
  TASK_LIST_TYPE_ACTIVITY = 2;
}

message TaskListMetadata {
  google.protobuf.DoubleValue max_tasks_per_second = 1;
}

message TaskListPartitionMetadata {
  string key = 1;
  string owner_host_name = 2;
}

message TaskListStatus {
  int64 backlog_count_hint = 1;
  int64 read_level = 2;
  int64 ack_level = 3;
  double rate_per_second = 4;
  TaskIDBlock task_id_block = 5;
}

message TaskIDBlock {
  int64 start_id = 1;
  int64 end_id = 2;
}

message PollerInfo {
  google.protobuf.Timestamp last_access_time = 1;
  string identity = 2;
  double rate_per_second = 3;
}

message StickyExecutionAttributes {
  TaskList worker_task_list = 1;
  google.protobuf.Duration schedule_to_start_timeout = 2;
}
