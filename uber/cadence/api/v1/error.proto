// Copyright (c) 2020 Uber Technologies, Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

syntax = "proto3";

package uber.cadence.api.v1;

option go_package = "github.com/uber/cadence-idl/go/proto/api/v1;apiv1";
option java_multiple_files = true;
option java_outer_classname = "ErrorProto";
option java_package = "com.uber.cadence.api.v1";

message WorkflowExecutionAlreadyStartedError {
  string start_request_id = 1;
  string run_id = 2;
}

message EntityNotExistsError {
  string current_cluster = 1;
  string active_cluster = 2;
}

message WorkflowExecutionAlreadyCompletedError {
}

message DomainNotActiveError {
  string domain = 1;
  string current_cluster = 2;
  string active_cluster = 3;
}

message ClientVersionNotSupportedError {
  string feature_version = 1;
  string client_impl = 2;
  string supported_versions = 3;
}

message FeatureNotEnabledError {
  string feature_flag = 1;
}

message CancellationAlreadyRequestedError {
}

message DomainAlreadyExistsError {
}

message LimitExceededError {
}

message QueryFailedError {
}

message ServiceBusyError {
}

message StickyWorkerUnavailableError {
}
